{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","App","useState","isReversed","setIsReversed","NONE","sortType","setSortType","isButtonVisible","goodsList","goods","visibleGoods","sort","good1","good2","ALPHABET","localeCompare","LENGTH","length","Error","reverse","console","log","getReorderedGoods","className","onClick","type","classNames","map","good","ReactDOM","render","document","getElementById"],"mappings":"6KAkBKA,E,0EAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,W,SAGGD,O,eAAAA,I,uBAAAA,I,oBAAAA,M,KAyCE,IAAME,EAAgB,WAC3B,MAAoCC,oBAAS,GAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KACA,EAAgCF,mBAASH,EAASM,MAAlD,mBAAOC,EAAP,KAAiBC,EAAjB,KACMC,EAAkBF,IAAaP,EAASM,MAAQF,EAChDM,EAlCD,SACLC,EADK,GAGJ,IADCJ,EACF,EADEA,SAAUH,EACZ,EADYA,WAGNQ,EAAY,YAAOD,GAsBzB,OApBAC,EAAaC,MAAK,SAACC,EAAOC,GACxB,OAAQR,GACN,KAAKP,EAASgB,SACZ,OAAOF,EAAMG,cAAcF,GAC7B,KAAKf,EAASkB,OACZ,OAAOJ,EAAMK,OAASJ,EAAMI,OAC9B,KAAKnB,EAASM,KACZ,OAAO,EACT,QACE,MAAM,IAAIc,MAAM,kBAIlBhB,GACFQ,EAAaS,UAIfC,QAAQC,IAAIhB,EAAUH,GAEfQ,EAOWY,CAChBvB,EACA,CAAEM,WAAUH,eAGd,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,QAAS,kBAAMlB,EAAYR,EAASgB,WACpCW,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYrB,IAAaP,EAASgB,WALxC,iCAWA,wBACEU,QAAS,kBAAMlB,EAAYR,EAASkB,SACpCS,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,WAAYrB,IAAaP,EAASkB,SALxC,4BAWA,wBACEQ,QAAS,kBAAMrB,GAAeD,IAC9BuB,KAAK,SACLF,UAAWG,IACT,iBACA,CAAE,YAAaxB,IALnB,qBAWCK,GACC,wBACEiB,QAAS,WACPlB,EAAYR,EAASM,MACrBD,GAAc,IAEhBsB,KAAK,SACLF,UAAU,4BANZ,sBAaJ,6BACGf,EAAUmB,KAAI,SAAAC,GAAI,OACjB,oBAEE,UAAQ,OAFV,SAIGA,GAHIA,YCtHjBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f835c95b.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\nimport classNames from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPHABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  // To avoid the original array mutation\n  const visibleGoods = [...goods];\n\n  visibleGoods.sort((good1, good2) => {\n    switch (sortType) {\n      case SortType.ALPHABET:\n        return good1.localeCompare(good2);\n      case SortType.LENGTH:\n        return good1.length - good2.length;\n      case SortType.NONE:\n        return 0;\n      default:\n        throw new Error('pomylochka');\n    }\n  });\n\n  if (isReversed) {\n    visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\nexport const App: React.FC = () => {\n  const [isReversed, setIsReversed] = useState(false);\n  const [sortType, setSortType] = useState(SortType.NONE);\n  const isButtonVisible = sortType !== SortType.NONE || isReversed;\n  const goodsList = getReorderedGoods(\n    goodsFromServer,\n    { sortType, isReversed },\n  );\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          onClick={() => setSortType(SortType.ALPHABET)}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.ALPHABET },\n          )}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          onClick={() => setSortType(SortType.LENGTH)}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': sortType !== SortType.LENGTH },\n          )}\n        >\n          Sort by length\n        </button>\n\n        <button\n          onClick={() => setIsReversed(!isReversed)}\n          type=\"button\"\n          className={classNames(\n            'button is-info',\n            { 'is-light': !isReversed },\n          )}\n        >\n          Reverse\n        </button>\n\n        {isButtonVisible && (\n          <button\n            onClick={() => {\n              setSortType(SortType.NONE);\n              setIsReversed(false);\n            }}\n            type=\"button\"\n            className=\"button is-danger is-light\"\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {goodsList.map(good => (\n          <li\n            key={good}\n            data-cy=\"Good\"\n          >\n            {good}\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}